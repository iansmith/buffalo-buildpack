#!/bin/bash
set -e

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

GO_VERSION=1.11.4
NODE_VERSION=11.4.0

if [ -f $CACHE_DIR/go${GO_VERSION}/bin ]; then
  echo "++++++> found cached $CACHE_DIR/go${GO_VERSION}/bin"
  ls -l $CACHE_DIR/go${GO_VERSION}/bin
else
  echo "------> downloading go ${GO_VERSION}"
  pushd $CACHE_DIR >& /dev/null
  wget -q https://dl.google.com/go/go1.11.4.linux-amd64.tar.gz
  ls -l
  tar zxf go1.11.4.linux-amd64.tar.gz
  mv go go1.11.4
  rm -f *.tar *.gz
  popd >& /dev/null
fi

if [ -f $CACHE_DIR/node${NODE_VERSION}/bin ]; then
  echo "++++++> found cached $CACHE_DIR/node${NODE_VERSION}/bin"
  ls -l $CACHE_DIR/node${NODE_VERSION}/bin
else
  echo "------> downloading node ${NODE_VERSION}"
  pushd $CACHE_DIR >& /dev/null
  wget -q https://nodejs.org/dist/v11.4.0/node-v11.4.0-linux-x64.tar.xz
  tar zxf node-v11.4.0-linux-x64.tar
  rm -f *.tar *.xz
  mv node* node${NODE_VERSION}
  popd >& /dev/null
fi

export PATH=$PATH:$CACHE_DIR/go${GO_VERSION}/bin
export PATH=$PATH:$CACHE_DIR/node${NODE_VERSION}/bin
export GOBIN=$CACHE_DIR/go${GO_VERSION}/bin

echo "------> downloading buffalo"
go get -u github.com/gobuffalo/buffalo/...
echo "------> buffalo version is "
buffalo version

cd $BUILD_DIR
environment=development

if [ -f "$ENV_DIR/GO_ENV" ]; then
  environment=`cat $ENV_DIR/GO_ENV`
fi

buffalo build --environment=$environment --static -o /bin/app
